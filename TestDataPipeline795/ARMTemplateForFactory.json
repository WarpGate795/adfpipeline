{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "TestDataPipeline795"
		},
		"CSVToSQL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CSVToSQL'"
		},
		"SQLConnection_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQLConnection'"
		},
		"SQLDestTest_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'SQLDestTest'"
		},
		"TestBlob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'TestBlob'"
		},
		"TestSQLConn_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'TestSQLConn'"
		},
		"UploadTrigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/f92d31c2-92a2-4653-b1d4-8121b74d3fb0/resourceGroups/ADFExample/providers/Microsoft.Storage/storageAccounts/vickicii"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/TestPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "TestDataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "TestDataFlow",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"FlatFIletoSQL": {},
									"SQLSink": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					},
					{
						"name": "Inventory Stock Check",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "TestDataFlow",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[record_check]"
						},
						"linkedServiceName": {
							"referenceName": "TestSQLConn",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Back Order Updates",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Inventory Stock Check",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[sp_backlogs]"
						},
						"linkedServiceName": {
							"referenceName": "TestSQLConn",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-09-27T15:20:03Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/TestDataFlow')]",
				"[concat(variables('factoryId'), '/linkedServices/TestSQLConn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSVFile')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TestBlob",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "Data.csv",
						"container": "adfexample"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Invoice_id",
						"type": "String"
					},
					{
						"name": "Prod_id",
						"type": "String"
					},
					{
						"name": "Location_id",
						"type": "String"
					},
					{
						"name": "Qty",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TestBlob')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PowerQueryTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TestSQLConn",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "prod_id",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "loc_id",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "w_id",
						"type": "tinyint",
						"precision": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "orders"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TestSQLConn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestSQLTable')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "TestSQLConn",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "id",
						"type": "bigint",
						"precision": 19
					},
					{
						"name": "prod_id",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "loc_id",
						"type": "tinyint",
						"precision": 3
					},
					{
						"name": "qty",
						"type": "tinyint",
						"precision": 3
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "test_transaction"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/TestSQLConn')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CSVToSQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('CSVToSQL_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLConnection')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('SQLConnection_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDestTest')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('SQLDestTest_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestBlob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('TestBlob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestSQLConn')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('TestSQLConn_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TestDataFlow')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CSVFile",
								"type": "DatasetReference"
							},
							"name": "FlatFIletoSQL"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TestSQLTable",
								"type": "DatasetReference"
							},
							"name": "SQLSink"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          Invoice_id as long,",
						"          Prod_id as integer,",
						"          Location_id as integer,",
						"          Qty as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> FlatFIletoSQL",
						"FlatFIletoSQL sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          id as long,",
						"          prod_id as integer,",
						"          loc_id as integer,",
						"          qty as integer",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          id = Invoice_id,",
						"          prod_id = Prod_id,",
						"          loc_id = Location_id,",
						"          qty = Qty",
						"     )) ~> SQLSink"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CSVFile')]",
				"[concat(variables('factoryId'), '/datasets/TestSQLTable')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/UploadTrigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This trigger is activated when a file is uploaded in the blob storage",
				"annotations": [],
				"runtimeState": "Stopped",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "TestPipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/adfexample/blobs/Data",
					"blobPathEndsWith": ".csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('UploadTrigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/TestPipeline')]"
			]
		}
	]
}